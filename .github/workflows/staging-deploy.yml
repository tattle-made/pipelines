name: Deploy to Staging

on:
  push:
    branches:
      - development

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      keyword-filter: ${{ steps.filter.outputs.keyword-filter }}
      test-pipeline: ${{ steps.filter.outputs.test-pipeline }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: development
      - uses: dorny/paths-filter@v2.2.0
        id: filter
        with:
          filters: |
            keyword-filter:
                - 'src/keyword-filter/**/*'
            test-pipeline:
                - 'src/test-pipeline/**/*'
      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "setting variables"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Publish to Docker
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          username: tattletech
          password: ${{ secrets.DOCKER_PASSWORD }}
          name: tattletech/pipeline-cron-job-all
          tags: ${{ steps.vars.outputs.sha_short }}

  keyword-filter:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.keyword-filter == 'true' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: development
      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "setting variables"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

  test-pipeline:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.output.test-pipeline }}
    steps:
      - name: Run a one-line script
        run: echo Deploying UI Web Community
